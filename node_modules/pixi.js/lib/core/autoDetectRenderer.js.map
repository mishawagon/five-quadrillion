{"version":3,"sources":["../../src/core/autoDetectRenderer.js"],"names":["autoDetectRenderer","utils","width","height","options","noWebGL","isWebGLSupported"],"mappings":";;;QAuBgBA,kB,GAAAA,kB;;AAvBhB;;IAAYC,K;;AACZ;;;;AACA;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;;AAmBO,SAASD,kBAAT,GACP;AAAA,QADmCE,KACnC,uEAD2C,GAC3C;AAAA,QADgDC,MAChD,uEADyD,GACzD;AAAA,QAD8DC,OAC9D;AAAA,QADuEC,OACvE;;AACI,QAAI,CAACA,OAAD,IAAYJ,MAAMK,gBAAN,EAAhB,EACA;AACI,eAAO,4BAAkBJ,KAAlB,EAAyBC,MAAzB,EAAiCC,OAAjC,CAAP;AACH;;AAED,WAAO,6BAAmBF,KAAnB,EAA0BC,MAA1B,EAAkCC,OAAlC,CAAP;AACH","file":"autoDetectRenderer.js","sourcesContent":["import * as utils from './utils';\nimport CanvasRenderer from './renderers/canvas/CanvasRenderer';\nimport WebGLRenderer from './renderers/webgl/WebGLRenderer';\n\n/**\n * This helper function will automatically detect which renderer you should be using.\n * WebGL is the preferred renderer as it is a lot faster. If webGL is not supported by\n * the browser then this function will return a canvas renderer\n *\n * @memberof PIXI\n * @function autoDetectRenderer\n * @param {number} [width=800] - the width of the renderers view\n * @param {number} [height=600] - the height of the renderers view\n * @param {object} [options] - The optional renderer parameters\n * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n * @param {boolean} [options.antialias=false] - sets antialias (only applicable in chrome at the moment)\n * @param {boolean} [options.preserveDrawingBuffer=false] - enables drawing buffer preservation, enable this if you\n *      need to call toDataUrl on the webgl context\n * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer, retina would be 2\n * @param {boolean} [noWebGL=false] - prevents selection of WebGL renderer, even if such is present\n * @return {PIXI.WebGLRenderer|PIXI.CanvasRenderer} Returns WebGL renderer if available, otherwise CanvasRenderer\n */\nexport function autoDetectRenderer(width = 800, height = 600, options, noWebGL)\n{\n    if (!noWebGL && utils.isWebGLSupported())\n    {\n        return new WebGLRenderer(width, height, options);\n    }\n\n    return new CanvasRenderer(width, height, options);\n}\n"]}